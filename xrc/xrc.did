// Definition of Asset Classes
type AssetClass = variant {
  Cryptocurrency;
  FiatCurrency;
};

// Record configuration for an asset
type Asset = record {
  symbol : Text;
  class : AssetClass;
};

// Structure to define the parameters for 'get_exchange_rate' function
type GetExchangeRateRequest = record {
  base_asset : Asset;
  quote_asset : Asset;
  timestamp : ?Nat64; 
};

// Metadata associated with the exchange rate 
type ExchangeRateMetadata = record {
  decimals : Nat32;
  base_asset_num_received_rates : Nat64;
  base_asset_num_queried_sources : Nat64;
  quote_asset_num_received_rates : Nat64;
  quote_asset_num_queried_sources : Nat64;
  standard_deviation : Nat64;
  forex_timestamp : ?Nat64; 
};

// Record to hold exchange rate information
type ExchangeRate = record {
  base_asset : Asset;
  quote_asset : Asset;
  timestamp : Nat64;
  rate : Nat64;
  metadata : ExchangeRateMetadata;
};

// Define various types of errors that can occur while fetching exchange rates
type ExchangeRateError = variant {
  AnonymousPrincipalNotAllowed;
  Pending;
  CryptoBaseAssetNotFound;
  CryptoQuoteAssetNotFound;
  StablecoinRateNotFound;
  StablecoinRateTooFewRates;
  StablecoinRateZeroRate;
  ForexInvalidTimestamp;
  ForexBaseAssetNotFound;
  ForexQuoteAssetNotFound;
  ForexAssetsNotFound;
  RateLimited;
  NotEnoughCycles;
  FailedToAcceptCycles;
  InconsistentRatesReceived;
  Other : record {
    code : Nat32;
    description : Text;
  };
};

// Result type for fetching exchange rates
type GetExchangeRateResult = variant {
  Ok : ExchangeRate;
  Err : ExchangeRateError;
};

// Service definition for external interaction
service : {
  "get_exchange_rate" : (GetExchangeRateRequest) -> (async GetExchangeRateResult);
};